---
layout: post
title:  "Part 6:  Documentation"
date:   2018-08-12 15:16:46 -0400
categories: tutorial
---
Hello & welcome to Part 6!  This section is about documentation, how to set up our documentation, and how to hows our documentation for free on the internet.

## Make Some Docs

Documentation is super important!  Good docs help people use and understand your software.  This includes both readme files that help people get started, and detailed docs for each method.

We're going to use a thing called Sphinx to generate our documentation from the comments we leave in our code.  Sphinx is really complicated and powerful, but we'll be using it in a pretty simple way.

`cd` into the `doc` folder, and take a look around.  You'll see a bunch of Sphnix boilerplate code.  The exact code here is not something you should worry about!  Instead, run `make html` – this will generate all your documentation for you.

#### Checkpoint

Run, from the `doc` folder:
{% highlight bash %}
make html
{% endhighlight %}

You should see:
{% highlight bash %}
{% endhighlight %}


## Get Travis Working

We set up our Travis account in Part 2!  Travis is a service that runs your tests when you push new branches to GitHub.  This is useful because it means that you can't forget to run your tests – and it means that other people's PRs will have tests run against them.

Travis is controlled by a file called `.travis.yml`.  This file tells the Travis servers what to do with your code - in our case, just run the tests.

We've written the file for you.  Let's take a quick look at it.  The big `install` block handles the gruntwork of installing conda, updating it, and setting up our environment.  The `script` block is what Travis runs.  We currently just run `pytest`.

Let's modify this to run `flake8` as well.  `flake8` checks your code style, to make sure that you're writing code that is easy to read.

All you need to do is add `flake8` below the call to `pytest`, then commit and push your code.

Then, open up Travis, and you can see your tests run!

**Gotchas:**
- Rarely, your tests will pass locally but fail on Travis.  This is super frustrating, and is usually caused by there being a difference between your local environment and the Travis environment.

TODO ADD SOME WORDS HERE AND A BETTER TEST TODO

## Success!

We've added two tests, and gotten comfortable running pytest.  Furthermore, we've enabled Travis, so that our tests always run when we push code to GitHub.  In [Part 6][tutorial-part-6], we'll set up our documentation so that it builds automatically, and write some new docs.

[tutorial-part-6]: https://bmcfee.github.io/shablona/tutorial/2018/08/12/part-6.html 
